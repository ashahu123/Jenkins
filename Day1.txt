# Jenkins

*** Day1:
SCM: Git, Github, Gitlab Containerisation: Docker Orchestration: Kubernetes IAC: Terraform CICD: Jenkins

SDLC: Software development lifecycle

Req. Gathering / Analysis Plan / Design Coding / Development Testing Deploy / deliver Maintainance / monitoring

DevOps Eng - Process Dev and Ops will work same environment

Monolithic | Microservice amazon.war | cloth.war mobile.war home.war

cloth.war main.java demo.java app.java

Continuous Integration - Process of automating the integration of code files wrote by multiple developers java integrate java validate

Continous Building java compile java package .war

cloth.war

Continuous Testing

Contniuous deployment / delivery

Continuois integration / Continuous Build

GitHub -> { PULL(git clone) -> Intergrate (java integrate) -> java validate -> javac compile -> java package } -> cloth.war (tomcat)

Automation ->

It reduced time reduced effort reduced repeatative tasks

Deployment OR Delivered Server Store

Jenkins - Build Tool / CICD tool - Bamboo | plugins | Community Java based application weekly - unstable stable - 3 month

gitlab-ci, actions, code pipeline, cloud build, azure pipeline

Install Jenkins (Make sure Java is to be install)

RUn a fist job

HW TASK:
1. Creat a job to pull SC from pvt repo in git lab

2. Config, email notification for job status in jenkins
gmail - two way auth (dissable) - low security app (enable)


